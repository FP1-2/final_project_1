frontend:
  url: ${FRONTEND_URL:http://localhost:3000}
  urlPreview: ${URL_PREVIEW:http://localhost:3000}
server:
  port: ${SERVER_PORT:9000}
email:
  host: ${EMAIL_HOST}
  port: ${EMAIL_PORT}
  username: ${EMAIL}
  password: ${EMAIL_PASSWORD}

logging:
  level:
    org:
# рівень журналювання на DEBUG для всього пакету
#       springframework: DEBUG

# Це встановлює рівень журналювання на DEBUG специфічно для Spring Security
       springframework.security: DEBUG

#  Це встановлює рівень журналювання для кешування контексту тестування Spring.
#  Це може бути корисно при налаштуванні та виправленні тестів,
#  особливо якщо у вас є проблеми або питання щодо життєвого циклу контексту тестування або його кешування.
#       org.springframework.test.context.cache: DEBUG
springdoc:
  api-docs:
    path: /api-docs
  swagger-ui:
    path: /swagger-ui.html

---
spring:
  config:
    activate:
      on-profile: dev
  datasource:
    url: jdbc:h2:mem:db
    driver-class-name: org.h2.Driver
    username: sa
    password: sa
  h2:
    console:
      enabled: true
      path: /h2
  jpa:
    show-sql: false
    properties:
      hibernate.format_sql: "false"
    hibernate:

#  Що робить update:
#  Якщо таблиця відповідна сутності не існує, Hibernate створить її.
#  Якщо таблиця вже існує, Hibernate спробує оновити її структуру, щоб вона відповідала поточному вигляду сутності.
#  Якщо у сутності були додані нові поля, Hibernate додасть нові стовпці в таблицю.
#  Він не видалятиме стовпці, які більше не існують у сутності, і не змінюватиме існуючі стовпці.
#  для продакшена рекомендується використовувати системи міграції баз даних: Flyway, Liquibase та інші.
      ddl-auto: update
    database-platform: org.hibernate.dialect.H2Dialect
    defer-datasource-initialization: true
    jdbc:
      time_zone: UTC

#  open-in-view: true - сесія Hibernate залишається відкритою протягом HTTP-запиту,
#                        дозволяючи автоматично виконувати "ліниве завантаження" даних.
#                        Може призвести до проблем з продуктивністю.
#  open-in-view: false - сесія Hibernate закривається після завершення транзакції.
#                        Ліниве завантаження після цього викличе помилку.
    open-in-view: false

---
spring:
  config:
    activate:
      on-profile: prod
  datasource:
    url: ${DB_URL}
    driver-class-name: com.mysql.cj.jdbc.Driver
    username: ${DB_USERNAME}
    password: ${DB_PASSWORD}
  jpa:
    hibernate:
      ddl-auto: update
    database-platform: org.hibernate.dialect.MySQLDialect
    defer-datasource-initialization: true
    jdbc:
      time_zone: UTC
    open-in-view: false

  ssl:
    key-store: classpath:keystore.p12
    key-store-password: ${KEY_STORE_PASSWORD_SSL}
    key-store-type: PKCS12
    key-alias: tomcat

---